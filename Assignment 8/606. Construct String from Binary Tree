<aside>
ğŸ’¡ **Question 4**

You need to construct a binary tree from a string consisting of parenthesis and integers.

The whole input represents a binary tree. It contains an integer followed by zero, one or two pairs of parenthesis. The integer represents the root's value and a pair of parenthesis contains a child binary tree with the same structure.
You always start to construct the **left** child node of the parent first if it exists.

</aside>

Leetcode: https://leetcode.com/problems/construct-string-from-binary-tree/description/

Solution;

class Solution {
public:
    string tree2str(TreeNode* node) {
        string res = "";

        if (node == nullptr) return res;

        res += to_string(node->val);

        if (node->left || node->right) {
            res += "(";
            res += tree2str(node->left);
            res += ")";
        }
        
        if (node->right) {
            res += "(";
            res += tree2str(node->right);
            res += ")";
        }

        return res;    
    }
};
