Question 4
Given a sorted array of distinct integers and a target value, return the index if the
target is found. If not, return the index where it would be if it were inserted in
order.

You must write an algorithm with O(log n) runtime complexity.

Example 1:
Input: nums = [1,3,5,6], target = 5
Output: 2

Leetcode link : https://leetcode.com/problems/search-insert-position/

Solution:
class Solution {
public:
    int searchInsert(vector<int>& nums, int target) {
        int i = 0;
        int e = nums.size()-1;
        if(target > nums[e]) return e + 1;
        while (i <= e)
        {
            int mid = (i + e) / 2;
            if (nums[mid] == target) return mid;
            else 
            if (nums[mid] < target && nums[mid + 1] > target)
            return mid + 1; 
            else            
            if(nums[mid] < target) i = mid+1;
            else
            e = mid - 1;

        }
        return i;

    }
};
