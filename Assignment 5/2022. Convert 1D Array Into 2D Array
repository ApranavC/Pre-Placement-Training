<aside>
ðŸ’¡ **Question 1**

Convert 1D Array Into 2D Array

You are given a **0-indexed** 1-dimensional (1D) integer array original, and two integers, m and n. You are tasked with creating a 2-dimensional (2D) array with Â m rows and n columns using **all** the elements from original.

The elements from indices 0 to n - 1 (**inclusive**) of original should form the first row of the constructed 2D array, the elements from indices n to 2 * n - 1 (**inclusive**) should form the second row of the constructed 2D array, and so on.

Return *an* m x n *2D array constructed according to the above procedure, or an empty 2D array if it is impossible*.

</aside>

Leetcode link: https://leetcode.com/problems/convert-1d-array-into-2d-array/


class Solution {
public:
    vector<vector<int>> construct2DArray(vector<int>& original, int m, int n) {
        vector<vector<int>>ans(m, vector<int>(n));
        int x=0;
        if(m*n!=original.size()){

            return {};
        }
        for(int i=0; i<m; i++){
            for(int j=0; j<n; j++){
                ans[i][j]= original[x++];
            }
        }
        return ans;
        





        
    }
};
